{
  "openapi": "3.0.0",
  "info": {
    "title": "API Gestion Immobilier",
    "description": "API pour la gestion de biens immobiliers, annonces, utilisateurs et réservations",
    "version": "1.0.0",
    "contact": {
      "name": "Support Technique",
      "email": "support@real-estate-api.com"
    },
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Serveur de développement local"
    },
    {
      "url": "https://api.real-estate-example.com/api",
      "description": "Serveur de production (exemple)"
    }
  ],
  "tags": [
    {
      "name": "Authentification",
      "description": "Gestion de l'inscription et la connexion des utilisateurs"
    },
    {
      "name": "Utilisateurs",
      "description": "Opérations liées aux profils utilisateurs et favoris"
    },
    {
      "name": "Biens immobiliers",
      "description": "Gestion complète des biens immobiliers"
    },
    {
      "name": "Annonces",
      "description": "Gestion des annonces de vente ou location"
    },
    {
      "name": "Réservations",
      "description": "Gestion des demandes de visite"
    },
    {
      "name": "Exemples",
      "description": "Routes d'exemple pour l'API"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Identifiant unique de l'utilisateur"
          },
          "firstName": {
            "type": "string",
            "description": "Prénom de l'utilisateur"
          },
          "lastName": {
            "type": "string",
            "description": "Nom de famille de l'utilisateur"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Adresse email de l'utilisateur"
          },
          "role": {
            "type": "string",
            "enum": [
              "client",
              "owner",
              "admin"
            ],
            "description": "Rôle de l'utilisateur dans le système"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date de création du compte"
          },
          "favorites": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Liste des IDs des annonces favorites (pour les clients)"
          }
        }
      },
      "Property": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Identifiant unique du bien immobilier"
          },
          "title": {
            "type": "string",
            "description": "Titre du bien immobilier"
          },
          "description": {
            "type": "string",
            "description": "Description détaillée du bien"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zipCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "apartment",
              "house",
              "land",
              "commercial",
              "other"
            ],
            "description": "Type du bien immobilier"
          },
          "surface": {
            "type": "number",
            "description": "Surface en mètres carrés"
          },
          "rooms": {
            "type": "integer",
            "description": "Nombre de pièces"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Caractéristiques du bien"
          },
          "owner": {
            "type": "string",
            "description": "ID du propriétaire"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Ad": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "property": {
            "type": "string",
            "description": "ID du bien immobilier"
          },
          "type": {
            "type": "string",
            "enum": [
              "sale",
              "rent"
            ],
            "description": "Type d'annonce (vente ou location)"
          },
          "price": {
            "type": "number",
            "description": "Prix de vente ou loyer mensuel"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "URLs des images"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "pending",
              "sold",
              "rented"
            ],
            "description": "Statut de l'annonce"
          },
          "createdBy": {
            "type": "string",
            "description": "ID de l'utilisateur ayant créé l'annonce"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "ad": {
            "type": "string",
            "description": "ID de l'annonce"
          },
          "client": {
            "type": "string",
            "description": "ID du client"
          },
          "visitDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date et heure de la visite"
          },
          "message": {
            "type": "string",
            "description": "Message du client"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "cancelled",
              "completed"
            ],
            "description": "Statut de la réservation"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Example": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "paths": {
    "/examples": {
      "get": {
        "tags": [
          "Exemples"
        ],
        "summary": "Récupérer tous les exemples",
        "description": "Retourne tous les exemples disponibles",
        "responses": {
          "200": {
            "description": "Liste des exemples ou message de bienvenue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur"
          }
        }
      },
      "post": {
        "tags": [
          "Exemples"
        ],
        "summary": "Créer un nouvel exemple",
        "description": "Ajoute un nouvel exemple à la base de données",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exemple créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Example"
                }
              }
            }
          },
          "400": {
            "description": "Données invalides"
          },
          "500": {
            "description": "Erreur serveur"
          }
        }
      }
    },
    "/examples/{id}": {
      "get": {
        "tags": [
          "Exemples"
        ],
        "summary": "Récupérer un exemple par son ID",
        "description": "Retourne un exemple spécifique selon son ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de l'exemple à récupérer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exemple trouvé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Example"
                }
              }
            }
          },
          "404": {
            "description": "Exemple non trouvé"
          },
          "500": {
            "description": "Erreur serveur"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentification"],
        "summary": "Inscription d'un nouvel utilisateur",
        "description": "Permet de créer un nouveau compte utilisateur avec un rôle spécifique",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "password"
                ],
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" },
                  "role": { "type": "string", "enum": ["client", "owner"], "default": "client" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Utilisateur créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "token": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Données invalides ou email déjà utilisé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentification"],
        "summary": "Connexion d'un utilisateur",
        "description": "Authentifie un utilisateur et fournit un token JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "token": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Email ou mot de passe incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "message": { "type": "string", "example": "Email ou mot de passe incorrect" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Obtenir le profil de l'utilisateur connecté",
        "description": "Renvoie les informations du profil de l'utilisateur authentifié",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profil récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé - Token manquant ou invalide"
          }
        }
      },
      "put": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Mettre à jour le profil utilisateur",
        "description": "Permet à un utilisateur de mettre à jour ses informations personnelles",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profil mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Données invalides"
          },
          "401": {
            "description": "Non autorisé"
          }
        }
      }
    },
    "/properties": {
      "get": {
        "tags": [
          "Biens immobiliers"
        ],
        "summary": "Liste des biens immobiliers",
        "description": "Récupère la liste des biens immobiliers avec options de filtrage et pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de la page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre d'éléments par page",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filtrer par type de bien",
            "schema": {
              "type": "string",
              "enum": [
                "apartment",
                "house",
                "land",
                "commercial",
                "other"
              ]
            }
          },
          {
            "name": "minSurface",
            "in": "query",
            "description": "Surface minimale en m²",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxSurface",
            "in": "query",
            "description": "Surface maximale en m²",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "minRooms",
            "in": "query",
            "description": "Nombre minimum de pièces",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Filtrer par ville",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Champ de tri (préfixé par - pour ordre descendant)",
            "schema": {
              "type": "string",
              "example": "-createdAt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des biens immobiliers récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "totalItems": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Property"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Biens immobiliers"
        ],
        "summary": "Créer un nouveau bien immobilier",
        "description": "Permet à un propriétaire ou admin de créer un nouveau bien immobilier",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "address",
                  "type",
                  "surface"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "zipCode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "apartment",
                      "house",
                      "land",
                      "commercial",
                      "other"
                    ]
                  },
                  "surface": {
                    "type": "number"
                  },
                  "rooms": {
                    "type": "integer"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bien immobilier créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Property"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Données invalides"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Rôle insuffisant (réservé aux propriétaires et admins)"
          }
        }
      }
    },
    "/ads": {
      "get": {
        "tags": [
          "Annonces"
        ],
        "summary": "Liste des annonces",
        "description": "Récupère la liste des annonces immobilières avec options de filtrage et pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de la page",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre d'éléments par page",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type d'annonce (vente ou location)",
            "schema": {
              "type": "string",
              "enum": [
                "sale",
                "rent"
              ]
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Prix minimum",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Prix maximum",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "propertyType",
            "in": "query",
            "description": "Type de bien immobilier",
            "schema": {
              "type": "string",
              "enum": [
                "apartment",
                "house",
                "land",
                "commercial",
                "other"
              ]
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Ville",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Statut de l'annonce",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "pending",
                "sold",
                "rented"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Champ de tri",
            "schema": {
              "type": "string",
              "example": "-price"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des annonces récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "totalItems": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ad"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bookings": {
      "post": {
        "tags": [
          "Réservations"
        ],
        "summary": "Créer une demande de visite",
        "description": "Permet à un client de créer une demande de visite pour une annonce",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ad",
                  "visitDate"
                ],
                "properties": {
                  "ad": {
                    "type": "string",
                    "description": "ID de l'annonce"
                  },
                  "visitDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Demande de visite créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Booking"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Données invalides"
          },
          "401": {
            "description": "Non autorisé"
          },
          "403": {
            "description": "Accès refusé (rôle client requis)"
          }
        }
      },
      "get": {
        "tags": [
          "Réservations"
        ],
        "summary": "Liste des réservations/visites",
        "description": "Récupère les réservations/visites en fonction du rôle de l'utilisateur",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filtrer par statut",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "confirmed",
                "cancelled",
                "completed"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Champ de tri",
            "schema": {
              "type": "string",
              "default": "-createdAt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des réservations récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Booking"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Non autorisé"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Authentification"],
        "summary": "Rafraîchir le token d'authentification",
        "description": "Permet de rafraîchir le token JWT à l'aide d'un refresh token.",
        "responses": {
          "200": { "description": "Token rafraîchi avec succès" },
          "401": { "description": "Refresh token invalide ou expiré" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentification"],
        "summary": "Déconnexion d'un utilisateur",
        "description": "Déconnecte l'utilisateur et invalide le refresh token.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Déconnexion réussie" },
          "401": { "description": "Non autorisé" }
        }
      }
    },
    "/auth/reset-password/{token}": {
      "post": {
        "tags": ["Authentification"],
        "summary": "Réinitialiser le mot de passe avec un token",
        "parameters": [
          { "name": "token", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string", "format": "password" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Mot de passe réinitialisé avec succès" },
          "400": { "description": "Token invalide ou expiré" }
        }
      }
    },
    "/properties/{id}": {
      "get": {
        "tags": ["Biens immobiliers"],
        "summary": "Récupérer un bien immobilier par son ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Détails du bien immobilier", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Property" } } } },
          "404": { "description": "Bien non trouvé" }
        }
      },
      "put": {
        "tags": ["Biens immobiliers"],
        "summary": "Modifier un bien immobilier",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Property" }
            }
          }
        },
        "responses": {
          "200": { "description": "Bien modifié avec succès" },
          "404": { "description": "Bien non trouvé" }
        }
      },
      "delete": {
        "tags": ["Biens immobiliers"],
        "summary": "Supprimer un bien immobilier",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Bien supprimé avec succès" },
          "404": { "description": "Bien non trouvé" }
        }
      }
    },
    "/ads/{id}": {
      "get": {
        "tags": ["Annonces"],
        "summary": "Détails d'une annonce",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Détails de l'annonce", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Ad" } } } },
          "404": { "description": "Annonce non trouvée" }
        }
      },
      "put": {
        "tags": ["Annonces"],
        "summary": "Modifier une annonce",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Ad" }
            }
          }
        },
        "responses": {
          "200": { "description": "Annonce modifiée avec succès" },
          "404": { "description": "Annonce non trouvée" }
        }
      },
      "delete": {
        "tags": ["Annonces"],
        "summary": "Supprimer une annonce",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Annonce supprimée avec succès" },
          "404": { "description": "Annonce non trouvée" }
        }
      }
    },
    "/ads/property/{propertyId}": {
      "get": {
        "tags": ["Annonces"],
        "summary": "Annonces pour un bien spécifique",
        "parameters": [
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Liste des annonces pour le bien" },
          "404": { "description": "Aucune annonce trouvée pour ce bien" }
        }
      }
    },
    "/ads": {
      "post": {
        "tags": ["Annonces"],
        "summary": "Créer une nouvelle annonce",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Ad" }
            }
          }
        },
        "responses": {
          "201": { "description": "Annonce créée avec succès" },
          "400": { "description": "Données invalides" }
        }
      }
    },
    "/users/favorites": {
      "get": {
        "tags": ["Utilisateurs"],
        "summary": "Liste des biens favoris",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Liste des favoris récupérée avec succès" }
        }
      }
    },
    "/users/favorites/{id}": {
      "post": {
        "tags": ["Utilisateurs"],
        "summary": "Ajouter un bien aux favoris",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Bien ajouté aux favoris" },
          "404": { "description": "Bien non trouvé" }
        }
      },
      "delete": {
        "tags": ["Utilisateurs"],
        "summary": "Retirer un bien des favoris",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Bien retiré des favoris" },
          "404": { "description": "Bien non trouvé" }
        }
      }
    },
    "/bookings/{id}": {
      "get": {
        "tags": ["Réservations"],
        "summary": "Consulter une réservation",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Détails de la réservation" },
          "404": { "description": "Réservation non trouvée" }
        }
      }
    },
    "/bookings/{id}/feedback": {
      "post": {
        "tags": ["Réservations"],
        "summary": "Ajouter un avis après visite (client)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feedback": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Feedback ajouté avec succès" },
          "404": { "description": "Réservation non trouvée" }
        }
      }
    },
    "/bookings/{id}/owner-feedback": {
      "post": {
        "tags": ["Réservations"],
        "summary": "Ajouter un commentaire du propriétaire après visite",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feedback": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Feedback propriétaire ajouté avec succès" },
          "404": { "description": "Réservation non trouvée" }
        }
      }
    },
    "/bookings/property/{propertyId}": {
      "get": {
        "tags": ["Réservations"],
        "summary": "Récupérer toutes les réservations d'un bien immobilier",
        "parameters": [
          { "name": "propertyId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Liste des réservations pour le bien" },
          "404": { "description": "Aucune réservation trouvée pour ce bien" }
        }
      }
    }
  }
}